apiVersion: v1
kind: Deployment
metadata:
  name: session-simulator
  namespace: session-simulator
  labels:
    app: session-simulator
spec:
  # todo: Does we need a larger maxSurge?
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 3
  selector:
    matchLabels:
      app: session-simulator
  template:
    metadata:
      labels:
        app: session-simulator
    spec:
      containers:
        - name: session-simulator
          image: saltandpurple/session-simulator:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: session-simulator-prestop
              mountPath: /etc/prestop.sh
              subPath: /etc/prestop.sh
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "/etc/prestop.sh"]
      volumes:
        - name: session-simulator-prestop
          configMap:
            name: session-simulator-presto
            items:
              - key: prestop.sh
                path: prestop.sh
---
apiVersion: v1
kind: Service
metadata:
  name: session-simulator
  namespace: session-simulator
spec:
  selector:
    app: session-simulator
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: session-simulator
  namespace: session-simulator
  annotations:
    haproxy-ingress.github.io/affinity: cookie
    haproxy-ingress.github.io/controller: haproxy
    haproxy-ingress.github.io/rewrite-target: /
spec:
  ingressClassName: haproxy
  rules:
    - http:
        paths:
          - path: /session-simulator
            pathType: Prefix
            backend:
              service:
                name: session-simulator
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: session-simulator-prestop
  namespace: session-simulator
data:
  preStop.sh: |
    #!/bin/bash
    echo "this will be the prestop hook script"